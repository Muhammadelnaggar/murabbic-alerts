// sensor-bluetooth.js

// ุญุฌุฑ ุงูุฃุณุงุณ: ูุญุฏุฉ ุงุณุชูุจุงู ุจูุงูุงุช ูู ุงูุญุณุงุณุงุช ุนุจุฑ Bluetooth (ูุณุชูุจูุงู)
// ูุฐุง ุงูููุฏ ูุง ูุนูู ูุนูููุง ุงูุขูุ ูููู ููุซู ุงูุจููุฉ ุงููุงุจูุฉ ููุชูุนูู ูุงุญููุง

// ูุนุชูุฏ ุนูู Web Bluetooth API (ูุฏุนูู ุฌุฒุฆููุง ูู ูุชุตูุญุงุช Android/Chrome)

async function readSensorViaBluetooth() {
  try {
    // ุทูุจ ุงูุงุชุตุงู ุจุฌูุงุฒ Bluetooth ุจุงุณู ูุนูู ุฃู ุฎุฏูุฉ ูุญุฏุฏุฉ
    const device = await navigator.bluetooth.requestDevice({
      acceptAllDevices: true, // ูููู ุชุฎุตูุตู ูุงุณู ุงูุญุณุงุณ ูุซู "MurabbikSensor"
      optionalServices: ['battery_service']
    });

    const server = await device.gatt.connect();
    const service = await server.getPrimaryService('battery_service');
    const characteristic = await service.getCharacteristic('battery_level');

    const value = await characteristic.readValue();
    const batteryLevel = value.getUint8(0);

    // ุฅุฑุณุงู ุงููุฑุงุกุฉ ุฅูู ุงูุณูุฑูุฑ
    await fetch('https://murabbic-alerts.onrender.com/api/sensors', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        animalId: prompt("๐ ุฃุฏุฎู ุฑูู ุงูุญููุงู"),
        readingType: 'battery_level',
        value: batteryLevel,
        timestamp: new Date().toISOString()
      })
    });

    alert('โ ุชู ุงุณุชูุจุงู ูุฅุฑุณุงู ูุฑุงุกุฉ ุงูุญุณุงุณ');
  } catch (error) {
    console.error('โ ูุดู ูู ุงูุงุชุตุงู ุจุงูุญุณุงุณ:', error);
    alert('โ ุชุนุฐุฑ ุงูุงุชุตุงู ุจุงูุญุณุงุณ');
  }
}

